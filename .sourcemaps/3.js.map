{"version":3,"sources":["../../src/pages/search/search.module.ts","../../src/pages/search/search.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AAC2B;AACG;AACK;AACL;AACxC;AAatC;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAX5B,+DAAQ,CAAC;YACN,YAAY,EAAE,CAAC,2DAAU,CAAC;YAC1B,OAAO,EAAE;gBACL,sEAAe,CAAC,QAAQ,CAAC,2DAAU,CAAC;gBACpC,+FAAqB;gBACrB,oGAAsB;gBACtB,+FAAqB;gBACrB,4FAAoB;aACvB;YACD,OAAO,EAAE,CAAC,2DAAU,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACnByB;AACJ;AAEkB;AACC;AACT;AACA;AAQ5D;IAMI,oBACW,SAAoB,EACnB,WAAwB,EACxB,aAA4B,EAC7B,MAAc,EACd,gBAAkC,EAClC,aAA4B;QAL5B,cAAS,GAAT,SAAS,CAAW;QACnB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAEnC,wBAAwB;QACxB,uEAAuE;QACvE,0BAA0B;QAC1B,2EAA2E;QAC3E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE7C,wBAAwB;QACxB,WAAW;QACX,YAAY;QACZ,KAAK;QAEL,oCAAoC;QACpC,qDAAqD;QACrD,wDAAwD;IAC5D,CAAC;IAEM,8BAAS,GAAhB,UAAiB,KAAU;QACvB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,EAAE;YACrC,SAAS,EAAE,KAAK,CAAC,IAAI;SACxB,CAAC,CAAC;IACP,CAAC;IAEM,2BAAM,GAAb,UAAc,EAAE;QACZ,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,EAAE;YACpC,IAAI,EAAE,EAAE,CAAC,IAAI;SAChB,CAAC,CAAC;IACP,CAAC;IAEM,gCAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE;YAChC,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC,CAAC;IACP,CAAC;IA9CQ,UAAU;QANtB,iEAAU,EAAE;QAEZ,gEAAS,CAAC;YACP,QAAQ,EAAE,aAAa;WACG;SAC7B,CAAC;oFAQiC;YACN,6EAAW;YACT,8DAAa;YACrB,sFAAM;YACI,+EAAgB;YACnB,OAAa;OAZ9B,UAAU,CA+CtB;IAAD,CAAC;AAAA;SA/CY,UAAU,e","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ErrorComponentModule } from '../../components/error/error.module';\nimport { FooterComponentModule } from '../../components/footer/footer.module';\nimport { HeadNavComponentModule } from '../../components/head-nav/head-nav.module';\nimport { LoaderComponentModule } from '../../components/loader/loader.module';\nimport { SearchPage } from './search';\n\n@NgModule({\n    declarations: [SearchPage],\n    imports: [\n        IonicPageModule.forChild(SearchPage),\n        FooterComponentModule,\n        HeadNavComponentModule,\n        LoaderComponentModule,\n        ErrorComponentModule\n    ],\n    exports: [SearchPage]\n})\nexport class SearchPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search/search.module.ts","import { Component, Injectable } from '@angular/core';\nimport { Events, IonicPage, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { ApiProvider, ChainNetwork } from '../../providers/api/api';\nimport { CurrencyProvider } from '../../providers/currency/currency';\nimport { PriceProvider } from '../../providers/price/price';\nimport { RedirProvider } from '../../providers/redir/redir';\n\n@Injectable()\n@IonicPage({\n    name: 'search',\n    segment: 'search'\n})\n@Component({\n    selector: 'page-search',\n    templateUrl: 'search.html'\n})\nexport class SearchPage {\n    public chain: string;\n    public chainNetwork: ChainNetwork;\n    public network: string;\n    public availableNetworks;\n    public matches;\n    constructor(\n        public navParams: NavParams,\n        private apiProvider: ApiProvider,\n        private priceProvider: PriceProvider,\n        public events: Events,\n        public currencyProvider: CurrencyProvider,\n        public redirProvider: RedirProvider\n    ) {\n        // const chain: string =\n        //   this.navParams.get('chain') || this.apiProvider.getConfig().chain;\n        // const network: string =\n        //   this.navParams.get('network') || this.apiProvider.getConfig().network;\n        this.matches = this.navParams.get('matches');\n\n        // this.chainNetwork = {\n        //   chain,\n        //   network\n        // };\n\n        // this.priceProvider.setCurrency();\n        // this.apiProvider.changeNetwork(this.chainNetwork);\n        // this.currencyProvider.setCurrency(this.chainNetwork);\n    }\n\n    public goToBlock(block: any): void {\n        this.redirProvider.redir('block-detail', {\n            blockHash: block.hash\n        });\n    }\n\n    public goToTx(tx): void {\n        this.redirProvider.redir('transaction', {\n            txId: tx.txid\n        });\n    }\n\n    public goToAddress(addr): void {\n        this.redirProvider.redir('address', {\n            addrStr: addr.address\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search/search.ts"],"sourceRoot":""}